// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dal;

namespace dal.Migrations
{
    [DbContext(typeof(ScmContext))]
    partial class ScmContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028");

            modelBuilder.Entity("dal.InventoryItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Count");

                    b.Property<int>("OrderThreshold");

                    b.Property<int?>("PartId");

                    b.HasKey("Id");

                    b.HasIndex("PartId");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("dal.PartType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("dal.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<int?>("PartId");

                    b.HasKey("Id");

                    b.HasIndex("PartId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("dal.InventoryItem", b =>
                {
                    b.HasOne("dal.PartType", "Part")
                        .WithMany()
                        .HasForeignKey("PartId");
                });

            modelBuilder.Entity("dal.Supplier", b =>
                {
                    b.HasOne("dal.PartType", "Part")
                        .WithMany()
                        .HasForeignKey("PartId");
                });
#pragma warning restore 612, 618
        }
    }
}
